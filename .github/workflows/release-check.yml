name: Check for new CumulusMX release

# This script runs on a schedule to check for new releases from the upstream repo. If it finds a new release writes the latest release number to a file. 
# Credit to peterevans on stackoverflow for the script: https://stackoverflow.com/a/58468828

on:
  schedule:
    - cron:  '21 19 * * *'

  workflow_dispatch:

jobs:
  get-version:
    runs-on: ubuntu-latest
    steps:

      - uses: actions/checkout@v4
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
  
      - name: Get current version number
        id: get_current_version
        run: |
          RELEASE_DATA=$(curl -sL "https://api.github.com/repos/cumulusmx/CumulusMX/releases/latest" 2>/dev/null)
          CURRENT_VERSION=$(echo "$RELEASE_DATA" | jq -r '.tag_name')
          echo "CURRENT_VERSION=$CURRENT_VERSION" >> $GITHUB_ENV

      - name: Get previous version number
        id: get_previous_version
        run: |
          PREVIOUS_VERSION=$(grep "cumulusmx_version" .version | cut -d'=' -f2)
          echo "PREVIOUS_VERSION=$PREVIOUS_VERSION" >> $GITHUB_ENV

      - name: Compare versions
        id: compare_versions
        run: |
          if [ -z "${{ env.CURRENT_VERSION }}" ] || [ "${{ env.CURRENT_VERSION }}" = "null" ]; then
            echo "No valid new version found. Skipping update."
            echo "MODIFIED=false" >> $GITHUB_ENV
          elif [ -n "${{ env.PREVIOUS_VERSION }}" ]; then
            if [ "${{ env.PREVIOUS_VERSION }}" = "${{ env.CURRENT_VERSION }}" ]; then
              echo "Versions match. No change detected."
              echo "MODIFIED=false" >> $GITHUB_ENV
            else
              echo "Versions differ. There has been a new release."
              sed -i "s/^cumulusmx_version=.*/cumulusmx_version=${{ env.CURRENT_VERSION }}/" .version
              curl -X POST \
                -H "Accept: application/vnd.github.v3+json" \
                -H "Authorization: token ${{ secrets.GITHUB_TOKEN }}" \
                https://api.github.com/repos/hucknz/cumulusmx/actions/workflows/v4-container-build-push.yml/dispatches \
                -d '{"ref":"main"}'
              echo "MODIFIED=true" >> $GITHUB_ENV
            fi
          else
            echo "Previous version not found. This is likely the first run."
            sed -i "s/^cumulusmx_version=.*/cumulusmx_version=${{ env.CURRENT_VERSION }}/" .version
            echo "MODIFIED=true" >> $GITHUB_ENV
          fi

      - name: Commit latest version
        if: env.MODIFIED == 'true'
        run: |
          git config --global user.name 'hucknz'
          git config --global user.email '12265772+hucknz@users.noreply.github.com'
          git commit -am "New release version found"
          git push
  
      - name: Notify new version found
        id: notify_current_version
        if: env.MODIFIED == 'true'
        uses: sarisia/actions-status-discord@v1
        with:
          webhook: ${{ secrets.DISCORD_WEBHOOK }}
          noprefix: true
          status: ${{ job.status }}
          title: ${{ github.workflow}} ${{ job.status }}
          description: "A new CumulusMX version was found. The build and push workflow has been triggered."
      
      - name: Notify failure
        id: notify_failure
        if: failure()
        uses: sarisia/actions-status-discord@v1
        with:
          webhook: ${{ secrets.DISCORD_WEBHOOK }}
          noprefix: true
          status: ${{ job.status }}
          title: "CumulusMX release check ${{ job.status }}"
